


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       -----------------------------------------------
    2 00000000         ; Design and Implementation of an AHB UART peripheral
    3 00000000         ; 1)Display text string: "TEST" on VGA. 
    4 00000000         ; 2)Receive/ print characters from/ to a computer throug
                       h UART port.
    5 00000000         ;-------------------------------------------------------
                       -----------------------------------------------
    6 00000000         
    7 00000000         
    8 00000000         ; Vector Table Mapped to Address 0 at Reset
    9 00000000         
   10 00000000                 PRESERVE8
   11 00000000                 THUMB
   12 00000000         
   13 00000000                 AREA             RESET, DATA, READONLY ; First 3
                                                            2 WORDS is VECTOR T
                                                            ABLE
   14 00000000                 EXPORT           __Vectors
   15 00000000         
   16 00000000 00003FFC 
                       __Vectors
                               DCD              0x00003FFC
   17 00000004 00000000        DCD              Reset_Handler
   18 00000008 00000000        DCD              0
   19 0000000C 00000000        DCD              0
   20 00000010 00000000        DCD              0
   21 00000014 00000000        DCD              0
   22 00000018 00000000        DCD              0
   23 0000001C 00000000        DCD              0
   24 00000020 00000000        DCD              0
   25 00000024 00000000        DCD              0
   26 00000028 00000000        DCD              0
   27 0000002C 00000000        DCD              0
   28 00000030 00000000        DCD              0
   29 00000034 00000000        DCD              0
   30 00000038 00000000        DCD              0
   31 0000003C 00000000        DCD              0
   32 00000040         
   33 00000040         ; External Interrupts
   34 00000040         
   35 00000040 00000000        DCD              0
   36 00000044 00000000        DCD              0
   37 00000048 00000000        DCD              0
   38 0000004C 00000000        DCD              0
   39 00000050 00000000        DCD              0
   40 00000054 00000000        DCD              0
   41 00000058 00000000        DCD              0
   42 0000005C 00000000        DCD              0
   43 00000060 00000000        DCD              0
   44 00000064 00000000        DCD              0
   45 00000068 00000000        DCD              0
   46 0000006C 00000000        DCD              0
   47 00000070 00000000        DCD              0
   48 00000074 00000000        DCD              0
   49 00000078 00000000        DCD              0
   50 0000007C 00000000        DCD              0
   51 00000080         
   52 00000080                 AREA             |.text|, CODE, READONLY



ARM Macro Assembler    Page 2 


   53 00000000         ;Reset Handler
   54 00000000         Reset_Handler
                               PROC
   55 00000000                 GLOBAL           Reset_Handler
   56 00000000                 ENTRY
   57 00000000         
   58 00000000         
   59 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;;;;;;;
   60 00000000         ;;              Complete the TO DO comments below       
                              ;;
   61 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;;;;;;;
   62 00000000         
   63 00000000         
   64 00000000         ;Write "TEST" to the text console and the UART
   65 00000000         
   66 00000000 4915            LDR              R1, =0x50000000 ;TO DO: Load R1
                                                             with Console text 
                                                            base address
   67 00000002 4A16            LDR              R2, =0x51000000 ;TO DO: Load R2
                                                             with UART base add
                                                            ress
   68 00000004 2054            MOVS             R0, #'T'    ;TO DO: Copy the va
                                                            lue of operand 2 e.
                                                            g #'T' to R0 and se
                                                            t condition flags
   69 00000006 6008            STR              R0, [R1]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R1
   70 00000008 6010            STR              R0, [R2]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R2
   71 0000000A         
   72 0000000A 4913            LDR              R1, =0x50000000 ;TO DO: Load R1
                                                             with Console text 
                                                            base address
   73 0000000C 4A13            LDR              R2, =0x51000000 ;TO DO: Load R2
                                                             with UART base add
                                                            ress
   74 0000000E 2045            MOVS             R0, #'E'    ;TO DO: Copy the va
                                                            lue of operand 2 e.
                                                            g #'T' to R0 and se
                                                            t condition flags
   75 00000010 6008            STR              R0, [R1]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R1
   76 00000012 6010            STR              R0, [R2]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R2
   77 00000014         
   78 00000014 4910            LDR              R1, =0x50000000 ;TO DO: Load R1
                                                             with Console text 
                                                            base address
   79 00000016 4A11            LDR              R2, =0x51000000 ;TO DO: Load R2
                                                             with UART base add
                                                            ress
   80 00000018 2053            MOVS             R0, #'S'    ;TO DO: Copy the va
                                                            lue of operand 2 e.



ARM Macro Assembler    Page 3 


                                                            g #'T' to R0 and se
                                                            t condition flags
   81 0000001A 6008            STR              R0, [R1]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R1
   82 0000001C 6010            STR              R0, [R2]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R2
   83 0000001E         
   84 0000001E 490E            LDR              R1, =0x50000000 ;TO DO: Load R1
                                                             with Console text 
                                                            base address
   85 00000020 4A0E            LDR              R2, =0x51000000 ;TO DO: Load R2
                                                             with UART base add
                                                            ress
   86 00000022 2054            MOVS             R0, #'T'    ;TO DO: Copy the va
                                                            lue of operand 2 e.
                                                            g #'T' to R0 and se
                                                            t condition flags
   87 00000024 6008            STR              R0, [R1]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R1
   88 00000026 6010            STR              R0, [R2]    ;TO DO: store R0 in
                                                             address stored in 
                                                            R2
   89 00000028         
   90 00000028         
   91 00000028         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;;;;;;;;;;;;;;;
   92 00000028         ;;   TO DO : Repeat above 3 instructions each for #'E', 
                       #'S' and #'T'  ;;
   93 00000028         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       ;;;;;;;;;;;;;;;;;
   94 00000028         
   95 00000028         ;Write four white dots to four corners of the frame buff
                       er
   96 00000028         
   97 00000028 490D            LDR              R1, =0x50000004
   98 0000002A 480E            LDR              R0, =0xFF
   99 0000002C 6008            STR              R0, [R1]
  100 0000002E         
  101 0000002E 490E            LDR              R1, =0x50000190
  102 00000030 480C            LDR              R0, =0xFF
  103 00000032 6008            STR              R0, [R1]
  104 00000034         
  105 00000034 490D            LDR              R1, =0x5000EE04
  106 00000036 480B            LDR              R0, =0xFF
  107 00000038 6008            STR              R0, [R1]
  108 0000003A         
  109 0000003A 490D            LDR              R1, =0x5000EF90
  110 0000003C 4809            LDR              R0, =0xFF
  111 0000003E 6008            STR              R0, [R1]
  112 00000040         
  113 00000040         
  114 00000040         
  115 00000040         ;wait until receive buffer is not empty
  116 00000040         
  117 00000040 490C    WAIT    LDR              R1, =0x51000004
  118 00000042 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 4 


  119 00000044 2101            MOVS             R1, #01
  120 00000046 4008            ANDS             R0,  R0,  R1
  121 00000048 2800            CMP              R0, #0x00
  122 0000004A D1F9            BNE              WAIT
  123 0000004C         
  124 0000004C         ;print received text to both UART and VGA
  125 0000004C         
  126 0000004C 4903            LDR              R1, =0x51000000
  127 0000004E 4A02            LDR              R2, =0x50000000
  128 00000050 6808            LDR              R0, [R1]
  129 00000052 6008            STR              R0, [R1]
  130 00000054 6010            STR              R0, [R2]
  131 00000056         
  132 00000056         
  133 00000056 E7F3            B                WAIT
  134 00000058         
  135 00000058                 ENDP
  136 00000058         
  137 00000058                 ALIGN            4           ; Align to a word b
                                                            oundary
  138 00000058         
  139 00000058                 END
              50000000 
              51000000 
              50000004 
              000000FF 
              50000190 
              5000EE04 
              5000EF90 
              51000004 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M0 --depe
nd=.\objects\cm0dsasm.d -o.\objects\cm0dsasm.o -I.\RTE\_Target_1 -IC:\Users\Che
ckout\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Che
ckout\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM0\Include --prede
fine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 538" --predefine="_RTE
_ SETA 1" --predefine="ARMCM0 SETA 1" --predefine="_RTE_ SETA 1" --list=.\listi
ngs\cm0dsasm.lst Device\cm0dsasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 13 in file Device\cm0dsasm.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 16 in file Device\cm0dsasm.s
   Uses
      At line 14 in file Device\cm0dsasm.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 52 in file Device\cm0dsasm.s
   Uses
      None
Comment: .text unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 54 in file Device\cm0dsasm.s
   Uses
      At line 17 in file Device\cm0dsasm.s
      At line 55 in file Device\cm0dsasm.s

WAIT 00000040

Symbol: WAIT
   Definitions
      At line 117 in file Device\cm0dsasm.s
   Uses
      At line 122 in file Device\cm0dsasm.s
      At line 133 in file Device\cm0dsasm.s

3 symbols
341 symbols in table
